package auth;

import model.Sistema;
import model.usuario.Usuario;
import storage.FileManager;
import ui.InterfazAdapter; // Aseg√∫rate de que este sea el nombre correcto del adaptador en la carpeta ui

public class PasarelaAuthorization {
    private Authorization auth;
    private InterfazAdapter interfaz; // Adaptador para la interacci√≥n con el usuario
    private FileManager fileManager;
    private int badCredential;

    // Constructor
    public PasarelaAuthorization() {
        this.fileManager = Sistema.getFileManager();
        this.auth = Authorization.getInstance(); // Usamos el patr√≥n Singleton
        this.interfaz = interfaz; // Se recibe el adaptador como dependencia
        this.badCredential = 0;
    }

    // M√©todo para iniciar sesi√≥n
    public Usuario iniciarSesion() {
        interfaz.mostrarMensaje("=== INICIO DE SESI√ìN ===");
        interfaz.mostrarMensaje("Por favor, introduce tu nombre de usuario:");
        String nick = interfaz.leerEntrada();
        interfaz.mostrarMensaje("Por favor, introduce tu contrase√±a:");
        String contrase√±a = interfaz.leerEntrada();

        String resultado = auth.checkPassword(nick, contrase√±a);
        if (resultado.equals("Contrase√±a correcta.")) {
            badCredential = 0; // Reinicia el contador de intentos fallidos
            interfaz.mostrarMensaje("‚úÖ Inicio de sesi√≥n exitoso. ¬°Bienvenido, " + nick + "!");
            return new Usuario(nick, contrase√±a); // Devuelve el usuario autenticado
        } else {
            badCredential++;
            interfaz.mostrarMensaje("‚ùå Error: " + resultado);
            return null; // Devuelve null si no se pudo iniciar sesi√≥n
        }
    }

    // M√©todo para registrar un usuario
    public Usuario registrarUsuario() {
        interfaz.mostrarMensaje("=== REGISTRO DE USUARIO ===");
        interfaz.mostrarMensaje("Por favor, introduce un nombre de usuario:");
        String nick = interfaz.leerEntrada();
        interfaz.mostrarMensaje("Por favor, introduce una contrase√±a:");
        String contrase√±a = interfaz.leerEntrada();

        Usuario nuevoUsuario = new Usuario(nick, contrase√±a); // Crea un nuevo usuario
        String resultado = auth.guardarUsuario(nuevoUsuario);
        if (resultado.equals("Usuario guardado correctamente.")) {
            interfaz.mostrarMensaje("‚úÖ " + resultado + " ¬°Bienvenido, " + nick + "!");
            return nuevoUsuario; // Devuelve el usuario registrado
        } else {
            interfaz.mostrarMensaje("‚ùå " + resultado);
            return null; // Devuelve null si no se pudo registrar
        }
    }

    // M√©todo para mostrar el men√∫ de sesi√≥n
    public Usuario menuSesion() {
        Usuario usuario = null;
        while (usuario == null) { // Repite hasta que se obtenga un usuario v√°lido
            interfaz.mostrarMensaje("=== BIENVENIDO A LA PASARELA DE AUTORIZACI√ìN ===");
            interfaz.mostrarMensaje("Por favor, selecciona una opci√≥n:");
            interfaz.mostrarMensaje("1. Iniciar sesi√≥n");
            interfaz.mostrarMensaje("2. Registrarse");
            interfaz.mostrarMensaje("3. Salir");
            interfaz.mostrarMensaje("==============================================");
            String opcion = interfaz.leerEntrada();

            switch (opcion) {
                case "1":
                    usuario = iniciarSesion(); // Intenta iniciar sesi√≥n
                    break;
                case "2":
                    usuario = registrarUsuario(); // Intenta registrar un usuario
                    break;
                case "3":
                    interfaz.mostrarMensaje("üëã ¬°Gracias por usar el sistema! Hasta pronto.");
                    return null; // Devuelve null para indicar que el usuario ha salido
                default:
                    interfaz.mostrarMensaje("‚ö†Ô∏è Opci√≥n no v√°lida. Por favor, intenta de nuevo.");
                    break;
            }
        }
        return usuario; // Devuelve el usuario autenticado o registrado
    }
}
